---
interface Props {
  isList: boolean,
  slug?: string,
	title: string,
	date: Date,
  tags: Array<string>
}

const { isList, slug, title, date, tags } = Astro.props;
---
<div class="blog-header">
  {
    isList ? (
      <h3 class="blog-heading">
        <a class="blog-link" href={`/blog/${slug}`}>{title}</a>
      </h3>
    )
    :
    (
      <h1 class="blog-header-title">{title}</h1>
    )
  }
  <time class="blog-time" datetime={date.toLocaleDateString("ja-JP", {year: "numeric",month: "2-digit",day: "2-digit"}).replaceAll('/', '-')}>
    {date.toLocaleDateString("ja-JP", {year: "numeric",month: "2-digit",day: "2-digit"})}
  </time>

  <ul class="blog-tag">
    {
      tags.map((tag) => (
        <li class="blog-tag-item">{tag}</li>
      ))
    }
  </ul>
</div>

<style lang="scss">
  .blog-heading {
    --clamp-min: 20;
    --clamp-max: 22;

    // margin-block-end: var(--space-s);
    padding-inline-end: var(--space-m);
    font-weight: var(--fw-medium);
    @include mq(md) {
      padding-inline-end: var(--space-l);
    }
  }
  .blog-link {
    &::before {
      content: "";
      display: block;
      inline-size: 16px;
      block-size: 16px;
      position: absolute;
      inset-block-start: 50%;
      inset-inline-end: var(--space-m);
      translate: 0 -50%;
      border-block-start: 1px solid var(--c-border-primary);
      border-inline-end: 1px solid var(--c-border-primary);
      rotate: 45deg;
      transition: inset-inline-end .3s ease;
      @include mq(md) {
        inline-size: 20px;
        block-size: 20px;
        inset-inline-end: var(--space-l);
      }
    }
    &::after {
      content: "";
      display: block;
      position: absolute;
      inset: 0;
    }
    &:hover {
      &::before {
        right: var(--space-m);
      }
    }
  }
  .blog-header-title {
    --clamp-min: 20;
    --clamp-max: 32;

    margin-block-end: var(--space-xs);
    font-weight: var(--fw-bold);
  }
  .blog-time {
    display: block;
    margin-block-end: var(--space-m);

  }
  .blog-tag {
    display: flex;
    gap: var(--space-xs);
    padding-inline-end: var(--space-m);
    @include mq(md) {
      padding-inline-end: var(--space-l);
    }
  }
  .blog-tag-item {
    padding: var(--space-2xs);

    line-height: 1.2;
    background-color: var(--c-bg);
    border: 1px solid var(--c-border-primary);
    border-inline-start: 4px solid var(--c-accent);
  }
</style>
