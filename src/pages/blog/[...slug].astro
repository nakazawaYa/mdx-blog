---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import TOC from '../../components/Toc.astro'
import BlogHeader from '../../components/Blog-header.astro';


export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map((entry) => ({
    params: {
      slug: entry.slug,
    },
    props: { entry },
  }));
}

const blogTitle = ' - TREASURE CHEST';

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

headings.filter((heading) => heading.depth <= 3);

const toc = headings.filter((heading) => heading.depth <= 3 && !(heading.slug === "footnote-label" && heading.text === "Footnotes"));
---

<Layout title={entry.data.title + blogTitle} desc={entry.data.desc}>
  <article>
    <div class="article-content">
      <div class="article-sidebar article-toc">
        <h2 class="article-toc-heading">目次</h2>
        <TOC headings={toc} />
      </div>

      <div class="article-main">
        <div class="article-head">
          <BlogHeader
            isList={false}
            title={entry.data.title}
            date={entry.data.date}
            tags={entry.data.tags}
          />
        </div>

        <div class="article-body markdown">
          <Content />
        </div>
      </div>
    </div>
  </article>
</Layout>

<style lang="scss">
  .article-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: 36px;
    @include mq(xl) {
      grid-template-columns: 1fr 364px;
      grid-template-areas: "body sidebar";
    }
  }
  .article-sidebar.article-toc {
    display: none;
    position: sticky;
    inset-block-start: 20px;
    grid-area: sidebar;
    align-self: start;
    padding: var(--space-m);
    border: 1px solid var(--c-border-primary);
    @include mq(xl) {
      display: block;
    }
  }
  .article-toc-heading {
    --clamp-min: 18;
    --clamp-max: 20;
    font-weight: var(--fw-bold);
  }
  .article-main {
    border-block-start: 1px solid var(--c-border-primary);
    border-block-end: 1px solid var(--c-border-primary);
    @include mq(md) {
      border: 1px solid var(--c-border-primary);
    }
    @include mq(xl) {
      grid-area: body;
    }
  }
  .article-head {
    padding: var(--space-m) var(--space-s);
    position: relative;

    background-color: var(--c-bg);
    background-image: linear-gradient(var(--c-gray) 1px, transparent 1px), linear-gradient(to right, var(--c-gray) 1px, var(--c-bg) 1px);
    background-size: 20px 20px;

    border-block-end: 1px solid var(--c-border-primary);

    @include mq(md) {
      padding: var(--space-m);
    }
  }
  .article-body {
    padding: var(--space-m) var(--space-s);
    @include mq(md) {
      padding: var(--space-m);
    }
  }
</style>