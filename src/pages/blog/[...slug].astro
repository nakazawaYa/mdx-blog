---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import TOC from '../../components/Toc.astro'
import BlogHeader from '../../components/Blog-header.astro';


export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map((entry) => ({
    params: {
      slug: entry.slug,
    },
    props: { entry },
  }));
}

const blogTitle = '- TREASURE CHEST';

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

headings.filter((heading) => heading.depth <= 3);

const toc = headings.filter((heading) => heading.depth <= 3 && !(heading.slug === "footnote-label" && heading.text === "Footnotes"));
---

<Layout title={entry.data.title + blogTitle} desc={entry.data.description}>
  <article>
    <div class="article-head">
      <BlogHeader
        isList={false}
        title={entry.data.title}
        date={entry.data.date}
        tags={entry.data.tags}
      />
    </div>

    <div class="article-content">
      <div class="article-sidebar">
        <h2>目次</h2>
        <TOC headings={toc} />
      </div>

      <div class="article-body">
        <div class="markdown">
          <Content />
        </div>
      </div>
    </div>
  </article>
</Layout>

<style lang="scss">
  .article-content {
    display: grid;
    grid-template-columns: 1fr 392px;
    grid-template-areas: "body sidebar";
    gap: 36px;
  }
  .article-sidebar {
    position: sticky;
    inset-block-start: 0;
    grid-area: sidebar;
    align-self: start;
    padding: var(--space-m);
    border: 1px solid var(--c-border-primary);
    border-radius: 20px;
  }
  .article-body {
    grid-area: body;
    padding: var(--space-l);
    border: 1px solid var(--c-border-primary);
    border-radius: 20px;
  }
  .markdown {
    p {
      color: #f00;
      line-height: var(--lh-l);
    }
  }
</style>