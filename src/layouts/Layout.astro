---
import "the-new-css-reset";
import '@fontsource/noto-sans-jp/400.css';
import '@fontsource/noto-sans-jp/500.css';
import '@fontsource/noto-sans-jp/700.css';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
interface Props {
	title: string,
  desc: string,
  isTop?: boolean,
}

const { title, desc, isTop } = Astro.props;
---

<!doctype html>
<html lang="ja">
	<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
		<title>{title}</title>
    <meta name="description" content={desc}>

    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <meta property="og:image:alt" content="">

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <!-- <link rel="apple-touch-icon" href="icon.png"> -->

    <meta name="generator" content={Astro.generator} />

    <script type="text/partytown" src="https://www.googletagmanager.com/gtag/js?id=G-FQ5WJVMXCS"></script>
    <script type="text/partytown">
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-FQ5WJVMXCS');
    </script>
	</head>
	<body>
    <Header isTop={isTop} />

    <main class="main">
      <slot />
    </main>

    <Footer />
	</body>
</html>
<style lang="scss" is:global>
  :root {
    --c-primary: #1A2633;
    --c-border-primary: #1A2633;
    --c-accent: #0063cc;

    --c-hover: rgb(104 152 204 / .2);

    --c-bg: #fff;

    --c-white: #fff;
    --c-gray: #f5f8fa;

    --fs-base: 1rem;

    --fs-h-xl: 1.5rem;
    --fs-h-l: 1.5rem;
    --fs-h-m: 1.25rem;
    --fs-h-s: 1.125rem;

    --fs-p-l: 1.125rem;
    --fs-p-m: var(--fs-base);
    --fs-p-s: .875rem;

    --fw-normal: 400;
    --fw-medium: 500;
    --fw-bold: 700;

    --lh-base: 1.6;
    --lh-l: 1.8;
    --lh-m: var(--lh-base);
    --lh-s: 1.4;
    --lh-xs: 1.2;

    --space-2xs: 4px;
    --space-xs: 8px;
    --space-s: 16px;
    --space-m: 24px;
    --space-l: 40px;
    --space-xl: 80px;
    --space-2xl: 120px;
    --gutter: 20px;
    @include mq(md) {
      --fs-h-xl: 2rem;
      --fs-h-l: 1.75rem;
      --fs-h-m: 1.5rem;
      --fs-h-s: 1.25rem;

      --fs-p-l: 1.25rem;
      --fs-p-m: 1.125rem;
      --fs-p-s: 1rem;

      --gutter: 80px;
      --content-width: 1200px;
    }
  }

  body {
    min-height: 100dvh;
    font-size: var(--fs-base);
    font-family: 'Noto Sans JP', sans-serif;
    line-height: var(--lh-base);
    @include mq(md) {
      padding-block-start: 32px;
    }
  }
  .main {
    // margin-inline: var(--gutter);
    @include mq(md) {
      inline-size: 100%;
      max-inline-size: calc(var(--content-width) + var(--gutter) * 2);
      margin-inline: auto;
      padding-inline: var(--gutter);
    }
  }
  .markdown {
    & > * {
      line-height: var(--lh-l);
      &:first-child {
        margin-block-start: 0;
      }
      &:last-child {
        margin-block-end: 0;
      }
    }
    :where(p:not([class])) {
      margin-block: 18px;
      font-size: var(--fs-base);
      strong {
        font-weight: var(--fw-bold);
      }
    }
    :where(h2:not([class]),h3:not([class]),h4:not([class])) {
      scroll-margin-block-start: var(--space-m);

      font-weight: var(--fw-bold);
      font-feature-settings: "palt";
      line-height: 1.375;
      letter-spacing: .05em;
      word-break: auto-phrase;
    }
    :where(h2:not([class])) {
      margin-block-start: 48px;
      margin-block-end: var(--space-s);
      font-size: var(--fs-h-m);
      font-weight: var(--fw-bold);
      @include mq(md) {
        margin-block-start: 60px;
        font-size: var(--fs-h-l);
      }
    }
    :where(h3:not([class])) {
      margin-block-start: 32px;
      margin-block-end: var(--space-s);
      font-size: var(--fs-h-m);
      font-weight: var(--fw-bold);
      @include mq(md) {
        margin-block-start: var(--space-l);
        margin-block-end: 12px;
      }
    }
    :where(h4:not([class])) {
      margin-block-start: var(--space-m);
      font-size: var(--fs-h-s);
      font-weight: var(--fw-bold);
    }
    :where(ul:not([class])) {
      margin-block: var(--space-s);
      margin-inline: var(--space-xs) 0;
      padding-inline-start: 20px;
      @include mq(md) {
        margin-inline: var(--space-s) 0;
      }
      & > li {
        margin-block: var(--space-xs);
        position: relative;
        font-size: var(--fs-p-m);
        &::before {
          content: "";
          display: block;
          inline-size: 5px;
          block-size: 5px;
          position: absolute;
          inset-block-start: .8125em;
          inset-inline-start: -10px;
          translate: -50% 0;
          background-color: var(--c-accent);
        }
        & > ul {
          margin-block: var(--space-xs);
          margin-inline: var(--space-s) 0;
        }
      }
    }
    :where(ol:not([class])) {
      counter-reset: cnt;
      margin-block: var(--space-s);
      margin-inline: var(--space-xs) 0;
      padding-inline-start: 20px;
      @include mq(md) {
        margin-inline: var(--space-s) 0;
      }
      & > li {
        margin-block: var(--space-xs);
        position: relative;
        font-size: var(--fs-p-m);
        &::before {
          counter-increment: cnt;
          content: counter(cnt)'.';
          display: block;
          position: absolute;
          inset-block-start: 0;
          inset-inline-start: -20px;
          color: var(--c-accent);
        }
      }
    }
    a {
      color: var(--c-accent);
      text-decoration-thickness: 1px;
      text-underline-offset: .1em;
      text-decoration: underline;
      transition: background-color .3s ease;
      &:hover {
        background-color: var(--c-hover);
      }
    }
    code {
      padding: 0 var(--space-xs);
      border-radius: 4px;
      // background-color: var(--c-sub-bg);
    }
  }
</style>
